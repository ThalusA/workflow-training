# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push events but only for the master, dev, main branch
  push:
    branches: [ master, dev, main ]
  pull_request:
    branches: [ master, dev, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  hello-world:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Say hello world
        run: echo Welcome to the Github Actions workshop !
  unit-test:
    runs-on: ubuntu-20.04
    container: epitechcontent/epitest-docker
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup and execute unit-tests
        run: make --no-print-directory -C $GITHUB_WORKSPACE tests_run > $GITHUB_WORKSPACE/coverage_outputs
        
      - name: Print out coverage
        run: make --no-print-directory -C $GITHUB_WORKSPACE coverage >> $GITHUB_WORKSPACE/coverage_outputs
        
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: coverage_outputs
          path: $GITHUB_WORKSPACE/coverage_outputs
  func-test:
    runs-on: ubuntu-20.04
    container: epitechcontent/epitest-docker
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup binary and execute functional tests
        run: make -C $GITHUB_WORKSPACE && cd $GITHUB_WORKSPACE && ./functional-test.sh > $GITHUB_WORKSPACE/function-tests_outputs
        
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: function-tests_outputs
          path: $GITHUB_WORKSPACE/function-tests_outputs
